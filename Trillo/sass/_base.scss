// Define all CSS vars here to be used throughout
:root {
  --color-primary: #eb2f64;
  --color-primary-light: #ff3366;
  --color-primary-dark: #ba265d;

  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;

  --color-grey-dark-1: #333;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;

  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);
  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);

  --line: 1px solid var(--color-grey-light-2);
}

// CSS vars wont work for media queries
$bp-largest: 75em; // 1200px/16px = 75
$bp-large: 68.75em; // 1100px/16px = 68.75
$bp-medium: 56.25em; // 900px/16px = 56.25
$bp-small: 37.5em; // 600px/16px = 37.5
$bp-smallest: 31.25em; // 500px/16px = 31.25

// Make sure parent has position: relative
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

* {
  margin: 0;
  padding: 0;
}

*,
*::after,
*::before {
  box-sizing: inherit; /* This makes sure all elements inherit that property */
}

html {
  box-sizing: border-box; // Makes sure elm height, width and border all fit inside specified height/width
  font-size: 62.5%; // We want 1rem = 10px; 10px/16px = 62.5%

  // Desktop-first
  @media only screen and (max-width: $bp-large) {
    font-size: 50%; // We want 1rem = 8px; 8px/16px = 50%
  }
}

body {
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(
    to right bottom,
    var(--color-primary),
    var(--color-primary-dark)
  );
  background-size: cover;
  background-repeat: no-repeat;

  min-height: 100vh;
}
